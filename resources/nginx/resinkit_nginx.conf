# /etc/nginx/sites-available/resinkit_nginx.conf

server {
    listen 8080;
    server_name _; # Catch all requests to this IP/port

    # Authorization subrequest function
    location = /internal/auth {
        # This location is for internal use only
        internal;

        # Proxy to the authorization endpoint
        proxy_pass http://127.0.0.1:8602/api/v1/pat/validate;

        # Pass the original authorization header to the auth endpoint
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;

        # Only pass through specific headers to the auth service
        proxy_set_header Authorization $http_authorization;

        # Cache auth results briefly to improve performance
        proxy_cache_valid 200 10s;
    }

    # Route /flink_sql_gateway/* to 127.0.0.1:8083/*
    location /flink_sql_gateway/ {
        # Perform authorization check before handling the request
        auth_request /internal/auth;

        # Remove the /flink_sql_gateway prefix when forwarding
        rewrite ^/flink_sql_gateway/(.*) /$1 break;

        # Forward to the internal service
        proxy_pass http://127.0.0.1:8083/;

        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Handle auth failures
        error_page 401 = @error401;
    }

    # I believe there's a typo in your requirement #2. You mentioned:
    # "All request to http://SERVICE_IP/flink_sql_gateway/* will be sent to 127.0.0.1:8081/*"
    # This conflicts with requirement #1. I'll assume you meant a different path, like /flink_ui/*

    # Route /flink_ui/* to 127.0.0.1:8081/*
    location /flink_ui/ {
        # Perform authorization check before handling the request
        auth_request /internal/auth;

        # Remove the /flink_ui prefix when forwarding
        rewrite ^/flink_ui/(.*) /$1 break;

        # Forward to the internal service
        proxy_pass http://127.0.0.1:8081/;

        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Handle auth failures
        error_page 401 = @error401;
    }

    # Custom 401 error handler
    location @error401 {
        return 401 '{"error": "Unauthorized - Invalid Token"}\n';
    }

    # Default location
    location / {
        # Return a simple message or redirect as needed
        return 404 "Not found";
    }
}