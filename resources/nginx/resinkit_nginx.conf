# Auto-detect number of CPU cores
worker_processes auto;

# Error log location
error_log /var/log/nginx/error.log warn;

# Process ID file location
pid /var/run/nginx.pid;

# Load modules
events {
    worker_connections 1024;
}

http {
    # Include MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # Access log location
    access_log /var/log/nginx/access.log main;

    # Optimize file sending
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    # Keep-alive timeout
    keepalive_timeout 65;

    # Gzip compression
    gzip on;
    gzip_disable "msie6";
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Define our server
    server {
        # Listen on all interfaces port 8602 (HTTP)
        listen 8602;
        
        # Server name (you can replace this with your domain)
        server_name _;
        
        # Authorization subrequest function
        location = /internal/auth {
            # This location is for internal use only
            internal;
            
            # Proxy to the authorization endpoint
            proxy_pass http://127.0.0.1:8081/resinkit/authorization;
            
            # Pass the original authorization header to the auth endpoint
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            
            # Only pass through specific headers to the auth service
            proxy_set_header Authorization $http_authorization;
            
            # Cache auth results briefly to improve performance
            proxy_cache_valid 200 10s;
        }

        # Route /flink_sql_gateway/* to 127.0.0.1:8083/*
        location /flink_sql_gateway/ {
            # Perform authorization check before handling the request
            auth_request /internal/auth;
            
            # Remove the /flink_sql_gateway prefix when forwarding
            rewrite ^/flink_sql_gateway/(.*) /$1 break;
            
            # Forward to the internal service
            proxy_pass http://127.0.0.1:8083/;
            
            # Standard proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Handle auth failures
            error_page 401 = @error401;
        }

        # Route /flink_dashboard/* to 127.0.0.1:8081/*
        location /flink_dashboard/ {
            # Perform authorization check before handling the request
            auth_request /internal/auth;
            
            # Remove the /flink_dashboard prefix when forwarding
            rewrite ^/flink_dashboard/(.*) /$1 break;
            
            # Forward to the internal service
            proxy_pass http://127.0.0.1:8081/;
            
            # Standard proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Handle auth failures
            error_page 401 = @error401;
        }

        # Custom 401 error handler
        location @error401 {
            # Return a JSON error for unauthorized requests
            default_type application/json;
            return 401 '{"error": "Unauthorized", "message": "Authentication required"}';
        }

        # Default location
        location / {
            # Return a simple message or redirect as needed
            return 404 "Not found";
        }
    }
}